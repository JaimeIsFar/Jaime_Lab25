<<<<<<< HEAD
All_Beliefs_x <- t.test(values~ind,data=belief_All,alternative = c("less"))
#Reset en el Promedio TOTAL * P
Reset_belAllP<- data.frame(cbind(BAP1[4,], BAP1[5,]))
belief_AllP <- stack(Reset_belAllP)
AllP_Beliefs <- t.test(values~ind,data=belief_AllP,alternative = c("less"))
#Sin P1-3
Reset_belAllP<- data.frame(cbind(BAP1_x[4,], BAP1_x[5,]))
belief_AllP <- stack(Reset_belAllP)
AllP_Beliefs_x <- t.test(values~ind,data=belief_AllP,alternative = c("less"))
###########################################
#Reset en la Diferencia (P2-P3) - ChoiceP1
Reset_DifOthers<- data.frame(cbind(DO1[4,], DO1[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset <- t.test(values~ind,data=Diff_Others,alternative = c("greater"))
#Sin P1-3
Reset_DifOthers<- data.frame(cbind(DO1_x[4,], DO1_x[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset_x <- t.test(values~ind,data=Diff_Others,alternative = c("greater"))
#########################################
##### Resumen de las T-Test
#########################################
#T-Test for Reset Effect (Total)
Reset_choices$p.value           #Reset en Elecciones P1
Raw_beliefs$p.value             #Reset en Creencias Crudas P2-P3
Mean_Belief$p.value             #Reset en Promedio Creencias P2-P3
Others_BeliefP$p.value          #Promedio P2-P3 * P
All_Beliefs$p.value             #Promedio P2-P3 Y P1
AllP_Beliefs$p.value            #Promedio P2-P3 y P1 * P
DiffOthers_Reset$p.value        #Diferencia (P2-P3) - P1
#T-Test for the Reset Effect (Without Participant 3)
Reset_choices_x$p.value         #Reset en Elecciones P1
Raw_beliefs_x$p.value           #Reset en Creencias Crudas P2-P3
Mean_Belief_x$p.value           #Reset en Promedio Creencias P2-P3
Others_BeliefP_x$p.value        #Promedio P2-P3 * P
All_Beliefs_x$p.value           #Promedio P2-P3 y P1
AllP_Beliefs_x$p.value          #Promedio P2-P3 y p1 * P
DiffOthers_Reset_x$p.value      #Diferencia (P2-P3) - P1
rm(list=ls())
#setwd("D:/APLICACION/EXP2")
setwd("C:/Users/Adriana/Desktop/Jaime_Lab25/Datos")
dir()
library("grDevices", lib.loc="C:/Program Files/R/R-3.2.2/library")
Data <- read.csv("Datac.csv")
#### Data Matrix ####
C1 <- matrix(data=NA, nrow=8, ncol=10)     #ChosenNumber by Player1 each Period(row) and Sesion(col)
B1 <- matrix(data=NA, nrow=8, ncol=20)    #RawBeliefs by Player1 each Period(row) and Sesion(col)
BO1 <- matrix(data=NA, nrow=8, ncol=10)    #MeanBeliefs of Others by Player1 each Period(row) and Sesion(col)
BOP1 <- matrix(data=NA, nrow=8, ncol=10)   #MeanBeliefs of Others*P by Player1 each Period(row) and Sesion(col)
BA1 <- matrix(data=NA, nrow=8, ncol=10)    #MeanBeliefs of All by Player1 each Period(row) and Sesion(col)
BAP1 <- matrix(data=NA, nrow=8, ncol=10)   #MeanBeliefs of All*P by Player1 each Period(row) and Sesion(col)
DO1 <- matrix(data=NA, nrow=8, ncol=10)    #Differences in Others by Player1 each Period(row) and Sesion(col)
DOP1 <- matrix(data=NA, nrow=8, ncol=10)   #Differences in Others*P by Player1 each Period(row) and Sesion(col)
DA1 <- matrix(data=NA, nrow=8, ncol=10)    #Differences in All by Player1 each Period(row) and Sesion(col)
DAP1 <- matrix(data=NA, nrow=8, ncol=10)   #Differences in All*P by Player1 each Period(row) and Sesion(col)
#### Matrix Values ####
S <- c(0,8,16,24,32,40,48,56,64,72)
c <- c(0,1,2,3,4,5,6,7,8,9)
d <- c(1,2,3,4,5,6,7,8,9,10)
for (a in 1:8){ for (b in 1:10){
C1[a,b] <- Data$EA[a+S[b]]
B1[a,b+c[b]] <- Data$CA1[a+S[b]]
B1[a,b+d[b]] <- Data$CA2[a+S[b]]
BO1[a,b] <- mean(c(B1[a,b+c[b]],B1[a,b+d[b]]))
BOP1[a,b] <- (mean(c(B1[a,b+c[b]],B1[a,b+d[b]]))) * (2/3)
BA1[a,b] <- mean(c(B1[a,b+c[b]],B1[a,b+d[b]],C1[a,b]))
BAP1[a,b] <- (mean(c(B1[a,b+c[b]],B1[a,b+d[b]],C1[a,b]))) * (2/3)
DO1[a,b] <- BO1[a,b] - C1[a,b]
DOP1[a,b] <- BOP1[a,b] - C1[a,b]
DA1[a,b] <- BA1[a,b] - C1[a,b]
DAP1[a,b] <- BAP1[a,b] - C1[a,b]
D1 <- sort(abs(c(DO1[a,b],DOP1[a,b],DA1[a,b],DAP1[a,b])))
}}
#### Plot Matrix ####
BarO <- matrix(data=NA, nrow=8, ncol=30)
BarOP <- matrix(data=NA, nrow=8, ncol=30)
BarA <- matrix(data=NA, nrow=8, ncol=30)
BarAP <- matrix(data=NA, nrow=8, ncol=30)
for (a in 1:8){ for (b in 1:10) {
e <- c(0,2,4,6,8,10,12,14,16,18)
BarO[a,b+e[b]] <- DO1[a,b]
BarOP[a,b+e[b]] <- DOP1[a,b]
BarA[a,b+e[b]] <- DA1[a,b]
BarAP[a,b+e[b]] <- DAP1[a,b]}}
##############################################
#Verificando Efecto Reset
##############################################
##############################################
#Arreglos sin participante ruidoso
C1_x <- C1[,-3]        #Elecciones P1 excepto No.3
B1_x <- B1[,-c(5,6)]   #Creencias Crudas sobre P2 y P3; excepto para el P1-3
BO1_x <- BO1[,-3]      #Creencias Promedio sobre P2 y P3; excepto para el P1-3
BOP1_x <- BOP1[,-3]    #Creencias Promedio P2-P3 * P  (Sin P1-3)
BA1_x <- BA1[,-3]      #Creencias Promedio P2-P3 Y P1 (Excepto para P1-3)
BAP1_x <- BAP1[,-3]    #Creencias Promedio P2-P3 y P1 * P (Excepto para P1-3)
DO1_x <- DO1[,-3]
DA1_x <- DA1[,-3]
#Reset en Elecciones
Reset_ch<- data.frame(cbind(C1[4,], C1[5,]))
choices_r <- stack(Reset_ch)
Reset_choices <- t.test(values~ind,data=choices_r,alternative = c("less"))
#Reset en Elecciones SIN soquete
Reset_ch<- data.frame(cbind(C1_x[4,], C1_x[5,]))
choices_r <- stack(Reset_ch)
Reset_choices_x <- t.test(values~ind,data=choices_r,alternative = c("less"))
#Reset en las Creencias Crudas del PArticipante 1
Reset_bel<- data.frame(cbind(B1[4,], B1[5,]))
belief_r <- stack(Reset_bel)
Raw_beliefs <- t.test(values~ind,data=belief_r,alternative = c("less"))
#Reset en las Creencias SIN soquete
Reset_bel<- data.frame(cbind(B1_x[4,], B1_x[5,]))
belief_r <- stack(Reset_bel)
Raw_beliefs_x <- t.test(values~ind,data=belief_r,alternative = c("less"))
#Reset en el Promedio de las Creencias de P2 y P3 por el Participante 1
Reset_bel_2<- data.frame(cbind(BO1[4,], BO1[5,]))
belief_rmean <- stack(Reset_bel_2)
Mean_Belief <- t.test(values~ind,data=belief_rmean,alternative = c("less"))
#Reset en Promedio de Creencias P2 y P3 sin P1-3
Reset_bel_2<- data.frame(cbind(BO1_x[4,], BO1_x[5,]))
belief_rmean <- stack(Reset_bel_2)
Mean_Belief_x <- t.test(values~ind,data=belief_rmean,alternative = c("less"))
#Reset en Creencias PRomedio sobre P1 y P2 *P
Reset_belOthersP<- data.frame(cbind(BOP1[4,], BOP1[5,]))
belief_OthersP <- stack(Reset_belOthersP)
Others_BeliefP <- t.test(values~ind,data=belief_OthersP,alternative = c("less"))
#Sin P1-3
Reset_belOthersP<- data.frame(cbind(BOP1_x[4,], BOP1_x[5,]))
belief_OthersP <- stack(Reset_belOthersP)
Others_BeliefP_x <- t.test(values~ind,data=belief_OthersP,alternative = c("less"))
#Reset en el Promedio TOTAL (P2, P3... y P1)
Reset_belAll<- data.frame(cbind(BA1[4,], BA1[5,]))
belief_All <- stack(Reset_belAll)
All_Beliefs <- t.test(values~ind,data=belief_All,alternative = c("less"))
#Sin P1-3
Reset_belAll<- data.frame(cbind(BA1_x[4,], BA1_x[5,]))
belief_All <- stack(Reset_belAll)
All_Beliefs_x <- t.test(values~ind,data=belief_All,alternative = c("less"))
#Reset en el Promedio TOTAL * P
Reset_belAllP<- data.frame(cbind(BAP1[4,], BAP1[5,]))
belief_AllP <- stack(Reset_belAllP)
AllP_Beliefs <- t.test(values~ind,data=belief_AllP,alternative = c("less"))
#Sin P1-3
Reset_belAllP<- data.frame(cbind(BAP1_x[4,], BAP1_x[5,]))
belief_AllP <- stack(Reset_belAllP)
AllP_Beliefs_x <- t.test(values~ind,data=belief_AllP,alternative = c("less"))
###########################################
#Reset en la Diferencia (P2-P3) - ChoiceP1
Reset_DifOthers<- data.frame(cbind(DO1[4,], DO1[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset <- t.test(values~ind,data=Diff_Others,alternative = c("greater"))
#Sin P1-3
Reset_DifOthers<- data.frame(cbind(DO1_x[4,], DO1_x[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset_x <- t.test(values~ind,data=Diff_Others,alternative = c("greater"))
#########################################
##### Resumen de las T-Test
#########################################
#T-Test for Reset Effect (Total)
Reset_choices$p.value           #Reset en Elecciones P1
Raw_beliefs$p.value             #Reset en Creencias Crudas P2-P3
Mean_Belief$p.value             #Reset en Promedio Creencias P2-P3
Others_BeliefP$p.value          #Promedio P2-P3 * P
All_Beliefs$p.value             #Promedio P2-P3 Y P1
AllP_Beliefs$p.value            #Promedio P2-P3 y P1 * P
DiffOthers_Reset$p.value        #Diferencia (P2-P3) - P1
#T-Test for the Reset Effect (Without Participant 3)
Reset_choices_x$p.value         #Reset en Elecciones P1
Raw_beliefs_x$p.value           #Reset en Creencias Crudas P2-P3
Mean_Belief_x$p.value           #Reset en Promedio Creencias P2-P3
Others_BeliefP_x$p.value        #Promedio P2-P3 * P
All_Beliefs_x$p.value           #Promedio P2-P3 y P1
AllP_Beliefs_x$p.value          #Promedio P2-P3 y p1 * P
DiffOthers_Reset_x$p.value      #Diferencia (P2-P3) - P1
rm(list=ls())
#setwd("D:/APLICACION/EXP2")
setwd("C:/Users/Adriana/Desktop/Jaime_Lab25/Datos")
dir()
library("grDevices", lib.loc="C:/Program Files/R/R-3.2.2/library")
Data <- read.csv("Datac.csv")
#### Data Matrix ####
C1 <- matrix(data=NA, nrow=8, ncol=10)     #ChosenNumber by Player1 each Period(row) and Sesion(col)
B1 <- matrix(data=NA, nrow=8, ncol=20)    #RawBeliefs by Player1 each Period(row) and Sesion(col)
BO1 <- matrix(data=NA, nrow=8, ncol=10)    #MeanBeliefs of Others by Player1 each Period(row) and Sesion(col)
BOP1 <- matrix(data=NA, nrow=8, ncol=10)   #MeanBeliefs of Others*P by Player1 each Period(row) and Sesion(col)
BA1 <- matrix(data=NA, nrow=8, ncol=10)    #MeanBeliefs of All by Player1 each Period(row) and Sesion(col)
BAP1 <- matrix(data=NA, nrow=8, ncol=10)   #MeanBeliefs of All*P by Player1 each Period(row) and Sesion(col)
DO1 <- matrix(data=NA, nrow=8, ncol=10)    #Differences in Others by Player1 each Period(row) and Sesion(col)
DOP1 <- matrix(data=NA, nrow=8, ncol=10)   #Differences in Others*P by Player1 each Period(row) and Sesion(col)
DA1 <- matrix(data=NA, nrow=8, ncol=10)    #Differences in All by Player1 each Period(row) and Sesion(col)
DAP1 <- matrix(data=NA, nrow=8, ncol=10)   #Differences in All*P by Player1 each Period(row) and Sesion(col)
=======
#####################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
rm(list=ls())
soporte <- seq(5,13,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(5,13,0.5)
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,10,0.9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(5,13),ylim=c(0,0.5),
axes=F, ylab="Probabilidad", xlab="Intensidad percibida", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=10,col='red', lty=2)                      #Dibujamos el criterio
text(12,0.3,"Percepción del estímulo", col="blue", font=1)
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
#####################################
#####################################
#####################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,25,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,25,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,40,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,50,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,40,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,25,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,39,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Ansiedad", col="blue", font=1)
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,39,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='black') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
text(10,0.03,"Personas sin Depresión", col="blue", font=1)
###################################
#####################################
#####################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
###################
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,39,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='black') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
text(10,0.03,"Personas sin Depresión", col="blue", font=1)
###################
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,39,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='black') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
text(20,0.03,"Personas sin Depresión", col="black", font=1)
###################
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,39,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='black') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
text(18,0.03,"Personas sin Depresión", col="black", font=1)
###################
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,50,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='black') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
text(18,0.03,"Personas sin Depresión", col="black", font=1)
###################
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,50,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='black') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
text(28,0.03,"Personas sin Depresión", col="black", font=1)
rm(list=ls())
soporte <- seq(5,13,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(5,13,0.5)
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,10,0.9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(5,13),ylim=c(0,0.5),
axes=F, ylab="Probabilidad", xlab="Intensidad percibida", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=10,col='red', lty=2)                      #Dibujamos el criterio
text(12,0.3,"Percepción del estímulo", col="blue", font=1)
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
#####################################
#####################################
#####################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
#######################################
######################################
#######################################
rm(list=ls())
soporte <- seq(1,110,.05)        #Especificamos el Soporte de nuestras distribuciones
intensidad <- seq(0,110,5)
d_ruido <- dnorm(soporte,50,9)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_luz <- dnorm(soporte,75,9)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,type='l', xlim=c(1,110),ylim=c(0,0.05),
axes=F, ylab="Probabilidad", xlab="Puntaje en prueba clínica", font.lab=1)             #Dibujamos la distribucion de ruido
axis(2,at=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500),labels=c("0", "50", "100", "150", "200", "250", "300", "350", "400", "450", "500"),las=1)
axis(1,at=intensidad,labels=intensidad)
lines(soporte,d_luz,type='l',col='blue') #Dibujamos la distribucion de Se??al
lines(soporte,d_ruido,type='l',col='black') #Dibujamos la distribucion de Se??al
abline(v=75,col='red', lty=2)                      #Dibujamos el criterio
#abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
text(97,0.03,"Personas con Depresión", col="blue", font=1)
text(28,0.03,"Personas sin Depresión", col="black", font=1)
Miss_Conf
Miss_Conf
its_A <- datos$H_A_C
C_Hits_B <- datos$H_B_C
C_Rej_A <- datos$R_A_C
C_Rej_B <- datos$R_B_C
C_FA_A <-  datos$F_A_C
C_FA_B <-  datos$F_B_C
#ORdenamos los datos
Miss_Conf <- data.frame(cbind(C_Miss_A,C_Miss_B))
Hits_Conf <- data.frame(cbind(C_Hits_A,C_Hits_B))
Rej_Conf<- data.frame(cbind(C_Rej_A,C_Rej_B))
FA_Conf<- data.frame(cbind(C_FA_A,C_FA_B))
Misses_C <- stack(Miss_Conf)
Hits_C <- stack(Hits_Conf)
Rejections_C <- stack(Rej_Conf)
Falarms_C <- stack(FA_Conf)
#Corremos la T
t.test(values~ind,data=Misses_C,alternative = c("greater"))
t.test(values~ind,data=Hits_C,alternative = c("greater"))
t.test(values~ind,data=Rejections_C,alternative = c("less"))
t.test(values~ind,data=Falarms_C,alternative = c("less"))
rm(list=ls())
setwd("C:/Users/Alejandro/Desktop/Jaime_Lab25/Datos")
library("grDevices", lib.loc="C:/Program Files/R/R-3.1.1/library")
Data <- read.csv("Datac.csv")
####################################################
####################################################
# Preparando los datos
####################################################
################################ Data Matrix (Empty)
#Matrices con Puntos (0-1)
W1 <- matrix(data=NA, nrow=8, ncol=10)     #IsWinner by Player1 each Period(row) and Sesion(col)
W2 <- matrix(data=NA, nrow=8, ncol=10)     #IsWinner by Player2 each Period(row) and Sesion(col)
W3 <- matrix(data=NA, nrow=8, ncol=10)     #IsWinner by Player3 each Period(row) and Sesion(col)
#Sumatoria de Puntos por Jugador, por Sesion
TW_P1Ex <- matrix(data=NA, nrow=1, ncol=10)
TW_P1J2 <- matrix(data=NA, nrow=1, ncol=10)
TW_P1J3 <- matrix(data=NA, nrow=1, ncol=10)
TW_P2Ex <- matrix(data=NA, nrow=1, ncol=10)
TW_P2J4 <- matrix(data=NA, nrow=1, ncol=10)
TW_P2J5 <- matrix(data=NA, nrow=1, ncol=10)
#Sumatorias de Puntos... sin incluir al Participante 3
TW_P1Ex_x <- matrix(data=NA, nrow=1, ncol=9)
TW_P1J2_x <- matrix(data=NA, nrow=1, ncol=9)
TW_P1J3_x <- matrix(data=NA, nrow=1, ncol=9)
TW_P2Ex_x <- matrix(data=NA, nrow=1, ncol=9)
TW_P2J4_x <- matrix(data=NA, nrow=1, ncol=9)
TW_P2J5_x <- matrix(data=NA, nrow=1, ncol=9)
>>>>>>> 5a3e6ba6c3c80cca936b586c05b316847bbb0649
#### Matrix Values ####
S <- c(0,8,16,24,32,40,48,56,64,72)
c <- c(0,1,2,3,4,5,6,7,8,9)
d <- c(1,2,3,4,5,6,7,8,9,10)
for (a in 1:8){ for (b in 1:10){
<<<<<<< HEAD
C1[a,b] <- Data$EA[a+S[b]]
B1[a,b+c[b]] <- Data$CA1[a+S[b]]
B1[a,b+d[b]] <- Data$CA2[a+S[b]]
BO1[a,b] <- mean(c(B1[a,b+c[b]],B1[a,b+d[b]]))
BOP1[a,b] <- (mean(c(B1[a,b+c[b]],B1[a,b+d[b]]))) * (2/3)
BA1[a,b] <- mean(c(B1[a,b+c[b]],B1[a,b+d[b]],C1[a,b]))
BAP1[a,b] <- (mean(c(B1[a,b+c[b]],B1[a,b+d[b]],C1[a,b]))) * (2/3)
DO1[a,b] <- BO1[a,b] - C1[a,b]
DOP1[a,b] <- BOP1[a,b] - C1[a,b]
DA1[a,b] <- BA1[a,b] - C1[a,b]
DAP1[a,b] <- BAP1[a,b] - C1[a,b]
D1 <- sort(abs(c(DO1[a,b],DOP1[a,b],DA1[a,b],DAP1[a,b])))
}}
#### Plot Matrix ####
BarO <- matrix(data=NA, nrow=8, ncol=30)
BarOP <- matrix(data=NA, nrow=8, ncol=30)
BarA <- matrix(data=NA, nrow=8, ncol=30)
BarAP <- matrix(data=NA, nrow=8, ncol=30)
for (a in 1:8){ for (b in 1:10) {
e <- c(0,2,4,6,8,10,12,14,16,18)
BarO[a,b+e[b]] <- DO1[a,b]
BarOP[a,b+e[b]] <- DOP1[a,b]
BarA[a,b+e[b]] <- DA1[a,b]
BarAP[a,b+e[b]] <- DAP1[a,b]}}
##############################################
#Verificando Efecto Reset
##############################################
##############################################
#Arreglos sin participante ruidoso
C1_x <- C1[,-3]        #Elecciones P1 excepto No.3
B1_x <- B1[,-c(5,6)]   #Creencias Crudas sobre P2 y P3; excepto para el P1-3
BO1_x <- BO1[,-3]      #Creencias Promedio sobre P2 y P3; excepto para el P1-3
BOP1_x <- BOP1[,-3]    #Creencias Promedio P2-P3 * P  (Sin P1-3)
BA1_x <- BA1[,-3]      #Creencias Promedio P2-P3 Y P1 (Excepto para P1-3)
BAP1_x <- BAP1[,-3]    #Creencias Promedio P2-P3 y P1 * P (Excepto para P1-3)
DO1_x <- DO1[,-3]
DA1_x <- DA1[,-3]
#Reset en Elecciones
Reset_ch<- data.frame(cbind(C1[4,], C1[5,]))
choices_r <- stack(Reset_ch)
Reset_choices <- t.test(values~ind,data=choices_r,alternative = c("less"))
#Reset en Elecciones SIN soquete
Reset_ch<- data.frame(cbind(C1_x[4,], C1_x[5,]))
choices_r <- stack(Reset_ch)
Reset_choices_x <- t.test(values~ind,data=choices_r,alternative = c("less"))
#Reset en las Creencias Crudas del PArticipante 1
Reset_bel<- data.frame(cbind(B1[4,], B1[5,]))
belief_r <- stack(Reset_bel)
Raw_beliefs <- t.test(values~ind,data=belief_r,alternative = c("less"))
#Reset en las Creencias SIN soquete
Reset_bel<- data.frame(cbind(B1_x[4,], B1_x[5,]))
belief_r <- stack(Reset_bel)
Raw_beliefs_x <- t.test(values~ind,data=belief_r,alternative = c("less"))
#Reset en el Promedio de las Creencias de P2 y P3 por el Participante 1
Reset_bel_2<- data.frame(cbind(BO1[4,], BO1[5,]))
belief_rmean <- stack(Reset_bel_2)
Mean_Belief <- t.test(values~ind,data=belief_rmean,alternative = c("less"))
#Reset en Promedio de Creencias P2 y P3 sin P1-3
Reset_bel_2<- data.frame(cbind(BO1_x[4,], BO1_x[5,]))
belief_rmean <- stack(Reset_bel_2)
Mean_Belief_x <- t.test(values~ind,data=belief_rmean,alternative = c("less"))
#Reset en Creencias PRomedio sobre P1 y P2 *P
Reset_belOthersP<- data.frame(cbind(BOP1[4,], BOP1[5,]))
belief_OthersP <- stack(Reset_belOthersP)
Others_BeliefP <- t.test(values~ind,data=belief_OthersP,alternative = c("less"))
#Sin P1-3
Reset_belOthersP<- data.frame(cbind(BOP1_x[4,], BOP1_x[5,]))
belief_OthersP <- stack(Reset_belOthersP)
Others_BeliefP_x <- t.test(values~ind,data=belief_OthersP,alternative = c("less"))
#Reset en el Promedio TOTAL (P2, P3... y P1)
Reset_belAll<- data.frame(cbind(BA1[4,], BA1[5,]))
belief_All <- stack(Reset_belAll)
All_Beliefs <- t.test(values~ind,data=belief_All,alternative = c("less"))
#Sin P1-3
Reset_belAll<- data.frame(cbind(BA1_x[4,], BA1_x[5,]))
belief_All <- stack(Reset_belAll)
All_Beliefs_x <- t.test(values~ind,data=belief_All,alternative = c("less"))
#Reset en el Promedio TOTAL * P
Reset_belAllP<- data.frame(cbind(BAP1[4,], BAP1[5,]))
belief_AllP <- stack(Reset_belAllP)
AllP_Beliefs <- t.test(values~ind,data=belief_AllP,alternative = c("less"))
#Sin P1-3
Reset_belAllP<- data.frame(cbind(BAP1_x[4,], BAP1_x[5,]))
belief_AllP <- stack(Reset_belAllP)
AllP_Beliefs_x <- t.test(values~ind,data=belief_AllP,alternative = c("less"))
###########################################
#Reset en la Diferencia (P2-P3) - ChoiceP1
Reset_DifOthers<- data.frame(cbind(DO1[4,], DO1[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset <- t.test(values~ind,data=Diff_Others,alternative = c("greater"))
#Sin P1-3
Reset_DifOthers<- data.frame(cbind(DO1_x[4,], DO1_x[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset_x <- t.test(values~ind,data=Diff_Others,alternative = c("greater"))
#########################################
##### Resumen de las T-Test
#########################################
#T-Test for Reset Effect (Total)
Reset_choices$p.value           #Reset en Elecciones P1
Raw_beliefs$p.value             #Reset en Creencias Crudas P2-P3
Mean_Belief$p.value             #Reset en Promedio Creencias P2-P3
Others_BeliefP$p.value          #Promedio P2-P3 * P
All_Beliefs$p.value             #Promedio P2-P3 Y P1
AllP_Beliefs$p.value            #Promedio P2-P3 y P1 * P
DiffOthers_Reset$p.value        #Diferencia (P2-P3) - P1
#T-Test for the Reset Effect (Without Participant 3)
Reset_choices_x$p.value         #Reset en Elecciones P1
Raw_beliefs_x$p.value           #Reset en Creencias Crudas P2-P3
Mean_Belief_x$p.value           #Reset en Promedio Creencias P2-P3
Others_BeliefP_x$p.value        #Promedio P2-P3 * P
All_Beliefs_x$p.value           #Promedio P2-P3 y P1
AllP_Beliefs_x$p.value          #Promedio P2-P3 y p1 * P
DiffOthers_Reset_x$p.value      #Diferencia (P2-P3) - P1
###########################################
#Reset en la Diferencia (P2-P3) - ChoiceP1
Reset_DifOthers<- data.frame(cbind(DO1[4,], DO1[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset <- t.test(values~ind,data=Diff_Others)  #alternative = c("greater")
#Sin P1-3
Reset_DifOthers<- data.frame(cbind(DO1_x[4,], DO1_x[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset_x <- t.test(values~ind,data=Diff_Others)  #,alternative = c("greater")
#########################################
##### Resumen de las T-Test
#########################################
#T-Test for Reset Effect (Total)
Reset_choices$p.value           #Reset en Elecciones P1
Raw_beliefs$p.value             #Reset en Creencias Crudas P2-P3
Mean_Belief$p.value             #Reset en Promedio Creencias P2-P3
Others_BeliefP$p.value          #Promedio P2-P3 * P
All_Beliefs$p.value             #Promedio P2-P3 Y P1
AllP_Beliefs$p.value            #Promedio P2-P3 y P1 * P
DiffOthers_Reset$p.value        #Diferencia (P2-P3) - P1
#T-Test for the Reset Effect (Without Participant 3)
Reset_choices_x$p.value         #Reset en Elecciones P1
Raw_beliefs_x$p.value           #Reset en Creencias Crudas P2-P3
Mean_Belief_x$p.value           #Reset en Promedio Creencias P2-P3
Others_BeliefP_x$p.value        #Promedio P2-P3 * P
All_Beliefs_x$p.value           #Promedio P2-P3 y P1
AllP_Beliefs_x$p.value          #Promedio P2-P3 y p1 * P
DiffOthers_Reset_x$p.value      #Diferencia (P2-P3) - P1
###########################################
#Reset en la Diferencia (P2-P3) - ChoiceP1
Reset_DifOthers<- data.frame(cbind(DO1[4,], DO1[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset <- t.test(values~ind,data=Diff_Others)
DiffOthers_Reset_side <- t.test(values~ind,data=Diff_Others, alternative = c("greater"))
#Sin P1-3
Reset_DifOthers<- data.frame(cbind(DO1_x[4,], DO1_x[5,]))
Diff_Others_x <- stack(Reset_DifOthers)
DiffOthers_Reset_x <- t.test(values~ind,data=Diff_Others_x)  #,alternative = c("greater")
DiffOthers_Reset_side_x <- t.test(values~ind,data=Diff_Others_x, alternative = c("greater"))
DiffOthers_Reset_side
DiffOthers_Reset_side_x
##### Arreglos sin participante Horrible
DO1_x <- DO1[,-3]
DOP1_x <- DOP1[,-3]
DA1_x <- DA1[,-3]
DAP1_x <- DAP1[,-3]
#DO1 - Reset en la Diferencia (P2-P3) - ChoiceP1
Reset_DifOthers<- data.frame(cbind(DO1[4,], DO1[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset <- t.test(values~ind,data=Diff_Others)
DiffOthers_Reset_side <- t.test(values~ind,data=Diff_Others, alternative = c("greater"))
#Sin P1-3
Reset_DifOthers<- data.frame(cbind(DO1_x[4,], DO1_x[5,]))
Diff_Others_x <- stack(Reset_DifOthers)
DiffOthers_Reset_x <- t.test(values~ind,data=Diff_Others_x)  #,alternative = c("greater")
DiffOthers_Reset_side_x <- t.test(values~ind,data=Diff_Others_x, alternative = c("greater"))
#DOP1 = Reset en la Diferencia (P2-P3)*P - ChoiceP1
Reset_DifOthersP<- data.frame(cbind(DOP1[4,], DOP1[5,]))
Diff_OthersP <- stack(Reset_DifOthersP)
DiffOthersP_Reset <- t.test(values~ind,data=Diff_OthersP)
DiffOthersP_Reset_side <- t.test(values~ind,data=Diff_OthersP, alternative = c("greater"))
#Sin P1-3
Reset_DifOthersP<- data.frame(cbind(DOP1_x[4,], DOP1_x[5,]))
Diff_OthersP <- stack(Reset_DifOthersP)
DiffOthersP_Reset <- t.test(values~ind,data=Diff_OthersP)
DiffOthersP_Reset_side <- t.test(values~ind,data=Diff_OthersP, alternative = c("greater"))
##### Arreglos sin participante Horrible
DO1_x <- DO1[,-3]
DOP1_x <- DOP1[,-3]
DA1_x <- DA1[,-3]
DAP1_x <- DAP1[,-3]
#DO1 - Reset en la Diferencia (P2-P3) - ChoiceP1
Reset_DifOthers<- data.frame(cbind(DO1[4,], DO1[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset <- t.test(values~ind,data=Diff_Others)
DiffOthers_Reset_side <- t.test(values~ind,data=Diff_Others, alternative = c("greater"))
#Sin P1-3
Reset_DifOthers<- data.frame(cbind(DO1_x[4,], DO1_x[5,]))
Diff_Others_x <- stack(Reset_DifOthers)
DiffOthers_Reset_x <- t.test(values~ind,data=Diff_Others_x)  #,alternative = c("greater")
DiffOthers_Reset_side_x <- t.test(values~ind,data=Diff_Others_x, alternative = c("greater"))
#DOP1 = Reset en la Diferencia (P2-P3)*P - ChoiceP1
Reset_DifOthersP<- data.frame(cbind(DOP1[4,], DOP1[5,]))
Diff_OthersP <- stack(Reset_DifOthersP)
DiffOthersP_Reset <- t.test(values~ind,data=Diff_OthersP)
DiffOthersP_Reset_side <- t.test(values~ind,data=Diff_OthersP, alternative = c("greater"))
#Sin P1-3
Reset_DifOthersP<- data.frame(cbind(DOP1_x[4,], DOP1_x[5,]))
Diff_OthersP <- stack(Reset_DifOthersP)
DiffOthersP_Reset <- t.test(values~ind,data=Diff_OthersP)
DiffOthersP_Reset_side <- t.test(values~ind,data=Diff_OthersP, alternative = c("greater"))
DiffOthersP_Reset
###############################################
# Resumen Diferencias en Consistencia (Reset?)
###############################################
#########Todos
c(DiffOthers_Reset, DiffOthers_Reset_side)
c(DiffOthersP_Reset, DiffOthersP_Reset_side)
###############################################
# Resumen Diferencias en Consistencia (Reset?)
###############################################
#########Todos
c(DiffOthers_Reset$p.value, DiffOthers_Reset_side$p.value)
c(DiffOthersP_Reset$p.value, DiffOthersP_Reset_side$p.value)
################
# Resumen Diferencias en Consistencia (Reset?)
###############################################
#########Todos
c(DiffOthers_Reset$p.value, DiffOthers_Reset_side$p.value)
c(DiffOthersP_Reset$p.value, DiffOthersP_Reset_side$p.value)
#########Sin Participante 3
c(DiffOthers_Reset_x$p.value, DiffOthers_Reset_side_x$p.value)
c(DiffOthersP_Reset_x$p.value, DiffOthersP_Reset_side_x$p.value)
#DO1 - Reset en la Diferencia (P2-P3) - ChoiceP1
Reset_DifOthers<- data.frame(cbind(DO1[4,], DO1[5,]))
Diff_Others <- stack(Reset_DifOthers)
DiffOthers_Reset <- t.test(values~ind,data=Diff_Others)
DiffOthers_Reset_side <- t.test(values~ind,data=Diff_Others, alternative = c("greater"))
#Sin P1-3
Reset_DifOthers<- data.frame(cbind(DO1_x[4,], DO1_x[5,]))
Diff_Others_x <- stack(Reset_DifOthers)
DiffOthers_Reset_x <- t.test(values~ind,data=Diff_Others_x)  #,alternative = c("greater")
DiffOthers_Reset_side_x <- t.test(values~ind,data=Diff_Others_x, alternative = c("greater"))
#DOP1 = Reset en la Diferencia (P2-P3)*P - ChoiceP1
Reset_DifOthersP<- data.frame(cbind(DOP1[4,], DOP1[5,]))
Diff_OthersP <- stack(Reset_DifOthersP)
DiffOthersP_Reset <- t.test(values~ind,data=Diff_OthersP)
DiffOthersP_Reset_side <- t.test(values~ind,data=Diff_OthersP, alternative = c("greater"))
#Sin P1-3
Reset_DifOthersP<- data.frame(cbind(DOP1_x[4,], DOP1_x[5,]))
Diff_OthersP <- stack(Reset_DifOthersP)
DiffOthersP_Reset_x <- t.test(values~ind,data=Diff_OthersP)
DiffOthersP_Reset_side_x <- t.test(values~ind,data=Diff_OthersP, alternative = c("greater"))
###############################################
# Resumen Diferencias en Consistencia (Reset?)
###############################################
#########Todos
c(DiffOthers_Reset$p.value, DiffOthers_Reset_side$p.value)
c(DiffOthersP_Reset$p.value, DiffOthersP_Reset_side$p.value)
#########Sin Participante 3
c(DiffOthers_Reset_x$p.value, DiffOthers_Reset_side_x$p.value)
c(DiffOthersP_Reset_x$p.value, DiffOthersP_Reset_side_x$p.value)
DA1
Da1[4,]
DA1[4,]
#DA1 = Diferencias (P1,P2,P3) - ChoiceP1
Rst_DifAll<- data.frame(cbind(DA1[4,], DA1[5,]))
Diff_All <- stack(Rst_DifAll)
DiffAll_Rst <- t.test(values~ind,data=Diff_All)
DiffAll_Rst_side <- t.test(values~ind,data=Diff_All, alternative = c("greater"))
#Sin P1-3
Rst_DifAll<- data.frame(cbind(DA1_x[4,], DA1_x[5,]))
Diff_All <- stack(Rst_DifAll)
DiffAll_Rst_x <- t.test(values~ind,data=Diff_All)
DiffAll_Rst_side_x <- t.test(values~ind,data=Diff_All, alternative = c("greater"))
#DA1 = Diferencias (P1,P2,P3) - ChoiceP1
Rst_DifAll<- data.frame(cbind(DA1[4,], DA1[5,]))
Diff_All <- stack(Rst_DifAll)
DiffAll_Rst <- t.test(values~ind,data=Diff_All)
DiffAll_Rst_side <- t.test(values~ind,data=Diff_All, alternative = c("greater"))
#Sin P1-3
Rst_DifAll<- data.frame(cbind(DA1_x[4,], DA1_x[5,]))
Diff_All <- stack(Rst_DifAll)
DiffAll_Rst_x <- t.test(values~ind,data=Diff_All)
DiffAll_Rst_side_x <- t.test(values~ind,data=Diff_All, alternative = c("greater"))
#DAP1 = Duferencias (P1,P2,P3)*P - Choice P1
###############################################
# Resumen Diferencias en Consistencia (Reset?)
###############################################
#########Todos
c(DiffOthers_Reset$p.value, DiffOthers_Reset_side$p.value)
c(DiffOthersP_Reset$p.value, DiffOthersP_Reset_side$p.value)
c(DiffAll_Rst$p.value, DiffAll_Rst_side$p.value)
#########Sin Participante 3
c(DiffOthers_Reset_x$p.value, DiffOthers_Reset_side_x$p.value)
c(DiffOthersP_Reset_x$p.value, DiffOthersP_Reset_side_x$p.value)
c(DiffAll_Rst_x$p.value, DiffAll_Rst_side_x$p.value)
#DAP1 = Duferencias (P1,P2,P3)*P - Choice P1
Rst_DifAllP<- data.frame(cbind(DAP1[4,], DAP1[5,]))
Diff_AllP <- stack(Rst_DifAllP)
DiffAllP_Rst <- t.test(values~ind,data=Diff_AllP)
DiffAllP_Rst_side <- t.test(values~ind,data=Diff_AllP, alternative = c("greater"))
#DAP1 = Duferencias (P1,P2,P3)*P - Choice P1
Rst_DifAllP<- data.frame(cbind(DAP1[4,], DAP1[5,]))
Diff_AllP <- stack(Rst_DifAllP)
DiffAllP_Rst <- t.test(values~ind,data=Diff_AllP)
DiffAllP_Rst_side <- t.test(values~ind,data=Diff_AllP, alternative = c("greater"))
#Sin P1-3
Rst_DifAllP<- data.frame(cbind(DAP1_x[4,], DAP1_x[5,]))
Diff_AllP <- stack(Rst_DifAllP)
DiffAllP_Rst_x <- t.test(values~ind,data=Diff_AllP)
DiffAllP_Rst_side_x <- t.test(values~ind,data=Diff_AllP, alternative = c("greater"))
##############################################
# Resumen Diferencias en Consistencia (Reset?)
###############################################
#########Todos
c(DiffOthers_Reset$p.value, DiffOthers_Reset_side$p.value)
c(DiffOthersP_Reset$p.value, DiffOthersP_Reset_side$p.value)
c(DiffAll_Rst$p.value, DiffAll_Rst_side$p.value)
c(DiffAllP_Rst$p.value, DiffAllP_Rst_side$p.value)
#########Sin Participante 3
c(DiffOthers_Reset_x$p.value, DiffOthers_Reset_side_x$p.value)
c(DiffOthersP_Reset_x$p.value, DiffOthersP_Reset_side_x$p.value)
c(DiffAll_Rst_x$p.value, DiffAll_Rst_side_x$p.value)
c(DiffAllP_Rst_x$p.value, DiffAllP_Rst_side_x$p.value)
=======
W1[a,b] <- Data$Puntos1[a+S[b]]
W2[a,b] <- Data$Puntos2[a+S[b]]
W3[a,b] <- Data$Puntos3[a+S[b]]
if (W1[a,b] > 2){ W1[a,b] <- 1} else {W1[a,b] <- 0}
if (W2[a,b] > 2){ W2[a,b] <- 1} else {W2[a,b] <- 0}
if (W3[a,b] > 2){ W3[a,b] <- 1} else {W3[a,b] <- 0}}}
P1_Ex <- W1[-c(5,6,7,8),]
P1_J2 <- W2[-c(5,6,7,8),]
P1_J3 <- W3[-c(5,6,7,8),]
P2_Ex <- W1[-c(1,2,3,4),]
P2_J4 <- W2[-c(1,2,3,4),]
P2_J5 <- W3[-c(1,2,3,4),]
for (a in 1:10){TW_P1Ex[,a] <- sum(P1_Ex[,a])}
for (a in 1:10){TW_P1J2[,a] <- sum(P1_J2[,a])}
for (a in 1:10){TW_P1J3[,a] <- sum(P1_J3[,a])}
for (a in 1:10){TW_P2Ex[,a] <- sum(P2_Ex[,a])}
for (a in 1:10){TW_P2J4[,a] <- sum(P2_J4[,a])}
for (a in 1:10){TW_P2J5[,a] <- sum(P2_J5[,a])}
TW_POthers <- matrix (data=NA, nrow=1, ncol=20)
TW_POthers_x <- matrix (data=NA, nrow=1, ncol=18)
for (a in 1:10){
TW_POthers[1,a] <- TW_P2J4[1,a]
TW_POthers[1,a+10] <- TW_P2J5[1,a]}
############################
# Grupos Sin Participante 3
############################
TW_P1Ex_x <- TW_P1Ex[,-3]
TW_P1J2_x <- TW_P1J2[,-3]
TW_P1J3_x <- TW_P1J3[,-3]
TW_P2Ex_x <- TW_P2Ex[,-3]
TW_P2J4_x <- TW_P2J4[,-3]
TW_P2J5_x <- TW_P2J5[,-3]
TW_POthers_x <- TW_POthers[,-c(3,13)]
#######################################
#######################################
# ANOVA's   Periodo 2 : Ex vs J4 vs J5
#######################################
P2_Wins<- data.frame(cbind(TW_P2Ex[1,],TW_P2J4[1,],TW_P2J5[1,]))
Wins_P2 <- stack(P2_Wins)
Wins_Juego2 <- aov(values~ind, data=Wins_P2)
#Sin P1-3
P2_Wins_x<- data.frame(cbind(TW_P2Ex_x,TW_P2J4_x,TW_P2J5_x))
Wins_P2_x <- stack(P2_Wins_x)
Wins_Juego2_x <- aov(values~ind, data=Wins_P2_x)
summary(Wins_Juego2_x) #SIN PARTICIPANTE 3
#########################################
#Pruebas T' Complementarias
#########################################
### 1: Experimentado VS J4
Ex_4<- data.frame(cbind(TW_P2Ex[1,], TW_P2J4[1,]))
Ex_4 <- stack(Ex_4)
Ex_v_J4 <- t.test(values~ind,data=Ex_4,alternative = c("greater"))
#Sin 3
Ex_4_x<- data.frame(cbind(TW_P2Ex_x, TW_P2J4_x))
Ex_4_x <- stack(Ex_4_x)
Ex_v_J4_x <- t.test(values~ind,data=Ex_4_x,alternative = c("greater"))
### 2: Experimentado VS J5
Ex_5<- data.frame(cbind(TW_P2Ex[1,], TW_P2J5[1,]))
Ex_5 <- stack(Ex_5)
Ex_v_J5 <- t.test(values~ind,data=Ex_5,alternative = c("greater"))
#Sin 4
Ex_5_x<- data.frame(cbind(TW_P2Ex_x, TW_P2J5_x))
Ex_5_x <- stack(Ex_5_x)
Ex_v_J5_x <- t.test(values~ind,data=Ex_5_x,alternative = c("greater"))
### 3: J4 vs J5 (NO EXPERIENCIA)
J4_5<- data.frame(cbind(TW_P2J4[1,], TW_P2J5[1,]))
J4_5 <- stack(J4_5)
J4_v_J5 <- t.test(values~ind,data=J4_5,alternative = c("two.sided", "less", "greater"))
#Sin 3
J4_5_x<- data.frame(cbind(TW_P2J4_x, TW_P2J5_x))
J4_5_x <- stack(J4_5_x)
J4_v_J5_x <- t.test(values~ind,data=J4_5_x,alternative = c("two.sided", "less", "greater"))
##########################################
##########################################
# Experiencia vs No Experiencia (Prueba T)
###################### J1 vs (J4,J5) #####
##########################################
Ex_NoEx<- data.frame(cbind(TW_P2Ex[1,], TW_POthers[1,]))
Ex_NoEx <- stack(Ex_NoEx)
Experiencia <- t.test(values~ind,data=Ex_NoEx, alternative = c("greater"))
#Sin 3
Ex_NoEx_x<- data.frame(cbind(TW_P2Ex_x, TW_POthers_x))
Ex_NoEx_x <- stack(Ex_NoEx_x)
Experiencia_x <- t.test(values~ind,data=Ex_NoEx_x, alternative = c("greater"))
##########################################
##########################################
# Resultados
##########################################
########1 : Analisis con todos los sujetos
##J4 y J5 como Independientes
summary(Wins_Juego2) #ANOVA para las Victorias de cada jugador en el Juego 2
#T's complementarias
J4_v_J5$p.value
Ex_v_J4$p.value
Ex_v_J5$p.value
##Experiencia VS No Experiencia (P4yP5)
Experiencia$p.value
########2 : Analisis - Participante 3
##J4 y J5 como Independientes
summary(Wins_Juego2_x) #ANOVA para las Victorias de cada jugador en el Juego 2
J4_v_J5_x$p.value
Ex_v_J4_x$p.value
Ex_v_J5_x$p.value
#Experiencia vs No Experiencia
Experiencia_x$p.value
TW_P1Ex
sum(TW_P1Ex)
sum(TW_P2Ex)
sum(TW_P1J2)
sum(TW_P1J3)
sum(TW_P2Ex)
sum(TW_P2J4)
sum(TW_P2J5)
sum(TW_P1Ex_x)
sum(TW_P1J2_x)
sum(TW_P1J3_x)
sum(TW_P2Ex_x)
sum(TW_P2J4_x)
sum(TW_P2J5_x)
>>>>>>> 5a3e6ba6c3c80cca936b586c05b316847bbb0649
